diff --git i/src/Floss/FillDB.hs w/src/Floss/FillDB.hs
index 5b71841..fd526d3 100644
--- i/src/Floss/FillDB.hs
+++ w/src/Floss/FillDB.hs
@@ -22,14 +22,16 @@ import Control.Monad.Trans.Reader
 import Floss.DB
 import Floss.Types
 import Floss.Query
+import Network.HTTP.Client
+import Control.Exception
 
 --insertsoftware obj = repsert (qidtokey $ qid obj)  $ Project (name obj) (website obj)
 -- ^original version, pointfree:
 insertsoftware = ap (repsert . qidtokey . qid) (liftM2 Project name website)
 
---insertsoftwarecoding :: (MonadIO m, PersistStoreWrite backend,
---                         BaseBackend backend ~ SqlBackend) =>
---                         Int -> Maybe Int -> ReaderT backend m ()
+insertsoftwarecoding :: (MonadIO m, PersistStoreWrite backend,
+                         BaseBackend backend ~ SqlBackend) =>
+                         Int -> Maybe Int -> ReaderT backend m ()
 insertsoftwarecoding qid (Just cid) = insert_ $ ProjectCoding (qidtokey qid) (qidtokey cid)
 insertsoftwarecoding _ Nothing = return ()
 
@@ -62,8 +64,12 @@ insertcodings (CodingList c) = mapM_ insertcoding c
 initDB :: IO ()
 initDB = runSqlite sqliteDB $ do
     runMigration migrateAll
-    col <- liftIO getCollection
-    insertall col
+    ecol <- liftIO $ try getCollection
+    case ecol of
+        (Left e)    -> do liftIO (print (e :: HttpException))
+                          col <- liftIO getCollection
+                          insertall col
+        (Right col) -> insertall col
     l   <- liftIO getLicenses
     insertlicenses l
     c   <- liftIO getCodings
diff --git i/src/Main.hs w/src/Main.hs
index 5524a58..5c48b35 100644
--- i/src/Main.hs
+++ w/src/Main.hs
@@ -1,5 +1,9 @@
 import Floss.FillDB
-import Floss.Query
+import Control.Exception.Safe(tryAny)
 
 main :: IO ()
-main = initDB
+main = do
+    eres <- tryAny initDB
+    case eres of
+        (Left e) -> print e
+        _ -> return ()
